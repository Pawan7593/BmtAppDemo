{"name": "test_verify_flight_booking_with_special_fare_armed_forces", "status": "broken", "statusDetails": {"message": "Exception: Invalid selector type: \"<class 'appium.webdriver.webelement.WebElement'>\"\nExpecting a selector of type: \"<class 'str'>\" (string)!", "trace": "self = <test.test_demo_application.MMT_Application_test testMethod=test_verify_flight_booking_with_special_fare_armed_forces>\n\n    @pytest.mark.all\n    @pytest.mark.success\n    def test_verify_flight_booking_with_special_fare_armed_forces(self):\n        self.enter_phone_number('7818915188')\n        self.click_on_continue_btn()\n        self.login_via_password()\n        self.enter_password('Freedom2022@')\n        self.click_on_submit_btn()\n        self.select_the_language()\n        self.click_on_continue()\n        self.verify_homepage()\n        self.click_on_flight()\n        self.validate_redirection_on_flight_search()\n        self.click_on_from()\n        self.select_city_from_to('Bangkok')\n        self.select_city_from_to('Bengaluru')\n        self.verify_city_name('Bangkok','Bengaluru')\n        self.click_on_departure_date()\n        self.select_date_of_departure()\n        self.click_on_done()\n        #self.click_on_traveller()\n        #self.increase_child_passenger()\n        #self.click_on_done()\n        self.select_special_fare_option()\n        self.click_on_search_flight()\n        self.verify_special_fare_msg()\n        self.click_on_okay()\n        #self.click_on_show_me()\n        self.click_on_got_it()\n        self.select_flight_compare_fare()\n        self.scroll_up()\n        self.sleep(2)\n        self.scroll_up()\n        self.click_to_check_box()\n        self.scroll_up()\n        self.scroll_up()\n>       self.fill_travellers_details()\n\ntest\\test_demo_application.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc\\pages\\flight_search.py:168: in fill_travellers_details\n    self.update_text(elements[1], 'Pawan')\nc:\\users\\pawan\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\appiumbase\\fixtures\\base_case.py:780: in update_text\n    selector, by = self.__recalculate_selector(selector, by)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test.test_demo_application.MMT_Application_test testMethod=test_verify_flight_booking_with_special_fare_armed_forces>\nselector = <appium.webdriver.webelement.WebElement (session=\"3e60c113-2f06-4426-9923-9ab5f34e56a3\", element=\"85259db5-a929-40d2-9115-f28dd85032b9\")>\nby = 'accessibility id', xp_ok = True\n\n    def __recalculate_selector(self, selector, by, xp_ok=True):\n        \"\"\"Use autodetection to return the correct selector with \"by\" updated.\n        If \"xp_ok\" is False, don't call convert_css_to_xpath(), which is\n        used to make the \":contains()\" selector valid outside JS calls.\"\"\"\n        _type = type(selector)  # First make sure the selector is a string\n        not_string = False\n        if sys.version_info[0] < 3:\n            if _type is not str and _type is not unicode:  # noqa: F821\n                not_string = True\n        else:\n            if _type is not str:\n                not_string = True\n        if not_string:\n            msg = \"Expecting a selector of type: \\\"<class 'str'>\\\" (string)!\"\n>           raise Exception('Invalid selector type: \"%s\"\\n%s' % (_type, msg))\nE           Exception: Invalid selector type: \"<class 'appium.webdriver.webelement.WebElement'>\"\nE           Expecting a selector of type: \"<class 'str'>\" (string)!\n\nc:\\users\\pawan\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\appiumbase\\fixtures\\base_case.py:147: Exception"}, "steps": [{"name": "Entering phone number", "status": "passed", "parameters": [{"name": "phone_number", "value": "'7818915188'"}], "start": 1651659937103, "stop": 1651659995381}, {"name": "Clicking on continue btn", "status": "passed", "start": 1651659995407, "stop": 1651659996977}, {"name": "Clicking on Login via Password", "status": "passed", "start": 1651659996979, "stop": 1651660003267}, {"name": "Entering password", "status": "passed", "parameters": [{"name": "password", "value": "'Freedom2022@'"}], "start": 1651660003270, "stop": 1651660007154}, {"name": "Clicking on submit btn", "status": "passed", "start": 1651660007154, "stop": 1651660007863}, {"name": "Selecting the language", "status": "passed", "start": 1651660007863, "stop": 1651660023920}, {"name": "Clicking on continue", "status": "passed", "start": 1651660023921, "stop": 1651660027290}, {"name": "Verifying homepage", "status": "passed", "start": 1651660027290, "stop": 1651660027386}, {"name": "Clicking on Flights", "status": "passed", "start": 1651660027386, "stop": 1651660032402}, {"name": "Validation redirection after click on flight", "status": "passed", "start": 1651660032404, "stop": 1651660037155}, {"name": "Clicking on from option", "status": "passed", "start": 1651660037155, "stop": 1651660037485}, {"name": "Selecting city", "status": "passed", "parameters": [{"name": "city", "value": "'Bangkok'"}], "start": 1651660037487, "stop": 1651660040248}, {"name": "Selecting city", "status": "passed", "parameters": [{"name": "city", "value": "'Bengaluru'"}], "start": 1651660040248, "stop": 1651660041417}, {"name": "Verifying selected city display correctly", "status": "passed", "parameters": [{"name": "city_from", "value": "'Bangkok'"}, {"name": "city_to", "value": "'Bengaluru'"}], "start": 1651660041418, "stop": 1651660044515}, {"name": "Clicking on departure date", "status": "passed", "start": 1651660044515, "stop": 1651660044747}, {"name": "Selecting date", "status": "passed", "start": 1651660044747, "stop": 1651660052981}, {"name": "Clicking on done after select date", "status": "passed", "start": 1651660052981, "stop": 1651660054581}, {"name": "Selecting special fare option", "status": "passed", "start": 1651660054581, "stop": 1651660055397}, {"name": "clicking on search flight", "status": "passed", "start": 1651660055397, "stop": 1651660055528}, {"name": "Verifying special fare message", "status": "passed", "start": 1651660055528, "stop": 1651660059742}, {"name": "Clicking on okay", "status": "passed", "start": 1651660059742, "stop": 1651660059878}, {"name": "Clicking on Got it btn", "status": "passed", "start": 1651660059879, "stop": 1651660068777}, {"name": "Selecting flight and compare fare", "status": "passed", "start": 1651660068779, "stop": 1651660086783}, {"name": "scrolling up", "status": "passed", "start": 1651660086784, "stop": 1651660095998}, {"name": "scrolling up", "status": "passed", "start": 1651660100044, "stop": 1651660108604}, {"name": "Clicking to check box", "status": "passed", "start": 1651660108605, "stop": 1651660108777}, {"name": "scrolling up", "status": "passed", "start": 1651660108777, "stop": 1651660117280}, {"name": "scrolling up", "status": "passed", "start": 1651660117280, "stop": 1651660125934}, {"name": "Filling travellers details", "status": "broken", "statusDetails": {"message": "Exception: Invalid selector type: \"<class 'appium.webdriver.webelement.WebElement'>\"\nExpecting a selector of type: \"<class 'str'>\" (string)!\n", "trace": "  File \"c:\\users\\pawan\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"E:\\BMT_Work\\BmtAppDemo\\src\\pages\\flight_search.py\", line 168, in fill_travellers_details\n    self.update_text(elements[1], 'Pawan')\n  File \"c:\\users\\pawan\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\appiumbase\\fixtures\\base_case.py\", line 780, in update_text\n    selector, by = self.__recalculate_selector(selector, by)\n  File \"c:\\users\\pawan\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\appiumbase\\fixtures\\base_case.py\", line 147, in __recalculate_selector\n    raise Exception('Invalid selector type: \"%s\"\\n%s' % (_type, msg))\n"}, "start": 1651660125934, "stop": 1651660132330}], "start": 1651659937102, "stop": 1651660133986, "uuid": "6657edc6-0c5b-4b7f-bafc-54ece2efdcd2", "historyId": "613d6cb44d16a67711319702cad17dfa", "testCaseId": "3f4ee9e0e3810a0af2d73f9151beb00b", "fullName": "test.test_demo_application.MMT_Application_test#test_verify_flight_booking_with_special_fare_armed_forces", "labels": [{"name": "tag", "value": "success"}, {"name": "tag", "value": "all"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_demo_application"}, {"name": "subSuite", "value": "MMT_Application_test"}, {"name": "host", "value": "BMT-LAP-105"}, {"name": "thread", "value": "4324-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_demo_application"}]}